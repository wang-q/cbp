name: Test Binaries

on:
  release:
    types: [edited]
  schedule:
    - cron: '0 0 * * *'  # Run daily
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/test-binaries.yml'
      - 'test-binaries/**'

jobs:
  test-packages:
    # Only run when Binaries release is updated
    if: ${{ github.event_name != 'release' || github.event.release.tag_name == 'Binaries' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cbp_bin: cbp.linux
          - os: macos-latest
            cbp_bin: cbp.macos
          - os: windows-latest
            cbp_bin: cbp.windows.exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download cbp
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            curl.exe -LO https://github.com/wang-q/cbp/releases/latest/download/${{ matrix.cbp_bin }}
          else
            curl -LO https://github.com/wang-q/cbp/releases/latest/download/${{ matrix.cbp_bin }}
            chmod +x ${{ matrix.cbp_bin }}
          fi
        shell: bash

      - name: Initialize cbp
        run: |
          ./${{ matrix.cbp_bin }} init
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "$HOME/.cbp/bin" >> $GITHUB_PATH
          else
            echo "$HOME/.cbp/bin" >> $GITHUB_PATH
            source ~/.bashrc
          fi
        shell: bash

      - name: Test cbp installation
        run: cbp --version || exit 1
        shell: bash

      - name: Install and test packages
        run: |
          platform=$(echo "$RUNNER_OS" | tr '[:upper:]' '[:lower:]')
          echo "==> Current platform: $platform"
          echo "==> cbp avail output:"
          cbp avail
          echo "==> cbp avail $platform output:"
          cbp avail $platform
          
          # Get all packages and platform-specific available packages
          all_pkgs=$(cbp avail | grep -v "^==>" | tr -s '[:space:]' '\n' | grep -v '^$')
          platform_pkgs=$(cbp avail $platform | grep -v "^==>" | tr -s '[:space:]' '\n' | grep -v '^$')
          test_results=""

          for pkg in $all_pkgs; do
            if [ -f "test-binaries/$pkg.sh" ]; then
              if echo "$platform_pkgs" | grep -q "^$pkg\$"; then
                echo "Testing $pkg..."
                if cbp install $pkg && \
                   cbp list $pkg && \
                   bash "test-binaries/$pkg.sh"; then
                  test_results="${test_results}✅ $pkg: PASSED\n"
                else
                  test_results="${test_results}❌ $pkg: FAILED\n"
                fi
              else
                skipped_unavailable="${skipped_unavailable:-} $pkg"
              fi
            else
              skipped_notest="${skipped_notest:-} $pkg"
            fi
          done

          echo -e "\n==> Test Summary:"
          echo -e "$test_results"
          [ -n "${skipped_unavailable:-}" ] && echo -e "⏭️ Skipped (not available):${skipped_unavailable}"
          [ -n "${skipped_notest:-}" ] && echo -e "⏭️ Skipped (no test):${skipped_notest}"

          if echo "$test_results" | grep -q "FAILED"; then
            exit 1
          fi
        shell: bash
